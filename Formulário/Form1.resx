<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fwOuVjulXTbFpQAAAABJRU5ErkJggg==
</value>
  </data>
</root>